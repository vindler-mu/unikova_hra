/**
 * Round 4 Utilities: Fake News Detector - Sorting game validation and scoring
 */

/**
 * Validate source categorization
 * @param {Object} userCategories - Object mapping sourceId to category
 * @param {Array<object>} sources - All sources with correctCategory
 * @returns {object} Validation result
 */
export const validateCategorization = (userCategories, sources) => {
  let correctCount = 0;
  let incorrectCount = 0;
  const details = [];

  sources.forEach(source => {
    const userCategory = userCategories[source.id];
    const correctCategory = source.correctCategory;
    const isCorrect = userCategory === correctCategory;

    if (isCorrect) {
      correctCount++;
    } else if (userCategory) {
      incorrectCount++;
    }

    details.push({
      sourceId: source.id,
      title: source.title,
      userCategory,
      correctCategory,
      isCorrect,
      explanation: source.explanation,
      redFlags: source.redFlags || []
    });
  });

  const uncategorized = sources.length - correctCount - incorrectCount;

  return {
    total: sources.length,
    correct: correctCount,
    incorrect: incorrectCount,
    uncategorized,
    percentage: Math.round((correctCount / sources.length) * 100),
    details
  };
};

/**
 * Calculate score for categorization
 * Scoring:
 * - Correct categorization: +12 points
 * - Bonus: +10 if all fake news identified
 * - Bonus: +10 if all credible sources identified
 * @param {object} validation - Result from validateCategorization
 * @param {Array<object>} sources - All sources
 * @returns {object} Score breakdown and total
 */
export const calculateScore = (validation, sources) => {
  let score = 0;
  const breakdown = [];

  // Points for correct categorizations
  const correctPoints = validation.correct * 12;
  if (validation.correct > 0) {
    score += correctPoints;
    breakdown.push({
      label: `${validation.correct} spr√°vnƒõ za≈ôazeno`,
      points: correctPoints,
      earned: true
    });
  }

  // Check if all fake news identified
  const fakeNewsSources = validation.details.filter(d => d.correctCategory === "fake");
  const fakeNewsCorrect = fakeNewsSources.filter(d => d.isCorrect).length;
  if (fakeNewsSources.length > 0 && fakeNewsCorrect === fakeNewsSources.length) {
    score += 10;
    breakdown.push({
      label: "Bonus: V≈°echny fake news identifikov√°ny",
      points: 10,
      earned: true
    });
  }

  // Check if all credible sources identified
  const credibleSources = validation.details.filter(d => d.correctCategory === "credible");
  const credibleCorrect = credibleSources.filter(d => d.isCorrect).length;
  if (credibleSources.length > 0 && credibleCorrect === credibleSources.length) {
    score += 10;
    breakdown.push({
      label: "Bonus: V≈°echny vƒõrohodn√© zdroje identifikov√°ny",
      points: 10,
      earned: true
    });
  }

  const maxScore = sources.length * 12 + 20; // +20 for bonuses
  const percentage = Math.round((score / maxScore) * 100);

  return {
    score,
    maxScore,
    percentage,
    breakdown,
    missedFake: fakeNewsSources.length - fakeNewsCorrect,
    missedCredible: credibleSources.length - credibleCorrect
  };
};

/**
 * Get feedback for categorization performance
 * @param {number} percentage - Score percentage (0-100)
 * @param {number} missedFake - Number of missed fake news
 * @returns {object} Performance feedback
 */
export const getFeedback = (percentage, missedFake = 0) => {
  if (missedFake > 0) {
    return {
      level: "Pozor!",
      message: `P≈ôehl√©dli jste ${missedFake} fake news! D√°vejte pozor na senzaƒçn√≠ nadpisy, anonymn√≠ autory a emotivn√≠ jazyk.`,
      color: "#ef4444",
      icon: "‚ö†Ô∏è"
    };
  }

  if (percentage >= 90) {
    return {
      level: "Vynikaj√≠c√≠!",
      message: "Perfektn√≠ detekce fake news a vƒõrohodn√Ωch zdroj≈Ø! M√°te vynikaj√≠c√≠ medi√°ln√≠ gramotnost.",
      color: "#22c55e",
      icon: "üõ°Ô∏è"
    };
  } else if (percentage >= 70) {
    return {
      level: "Velmi dob≈ôe",
      message: "Dobr√° schopnost rozli≈°it vƒõrohodn√© a nevƒõrohodn√© zdroje.",
      color: "#3b82f6",
      icon: "‚úÖ"
    };
  } else if (percentage >= 50) {
    return {
      level: "Uspokojivƒõ",
      message: "Z√°klady rozli≈°ov√°n√≠ fake news zvl√°d√°te, ale vƒõnujte pozornost detail≈Øm.",
      color: "#f59e0b",
      icon: "‚ö†Ô∏è"
    };
  } else {
    return {
      level: "Nedostateƒçnƒõ",
      message: "Detekce fake news pot≈ôebuje zlep≈°en√≠. Zamƒõ≈ôte se na zdroj, autora a kvalitu argumentace.",
      color: "#ef4444",
      icon: "‚ùå"
    };
  }
};

/**
 * Get category badge info
 * @param {string} category - credible, news, questionable, fake
 * @returns {object} Badge information
 */
export const getCategoryBadge = (category) => {
  const badges = {
    credible: {
      label: "Vƒõrohodn√©",
      color: "#22c55e",
      icon: "‚úì‚úì‚úì",
      description: "Peer-reviewed v√Ωzkum z renomovan√Ωch instituc√≠"
    },
    news: {
      label: "Zpravodajstv√≠",
      color: "#3b82f6",
      icon: "üì∞",
      description: "Seri√≥zn√≠ zpravodajsk√© zdroje reportuj√≠c√≠ o v√Ωzkumu"
    },
    questionable: {
      label: "Sporn√©",
      color: "#f59e0b",
      icon: "?",
      description: "Osobn√≠ blogy, pred√°torsk√© ƒçasopisy, n√≠zk√° kvalita"
    },
    fake: {
      label: "Fake News",
      color: "#ef4444",
      icon: "‚ö†Ô∏è",
      description: "Dezinformace, konspirace, zav√°dƒõj√≠c√≠ obsah"
    }
  };

  return badges[category] || badges.questionable;
};
